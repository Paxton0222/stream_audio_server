version: '3'
services:
  nginx:
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: ./docker/nginx.Dockerfile
    networks:
      - music_broadcast
    ports:
      - "1935:1935" # rtmp
      - "1999:1999" # hls
      - "5555:5555" # flower
      - "3000:3000" # server
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./hls:/mnt/hls
    restart: always
    depends_on:
      - fronted
      - flower
      - server
  rabbitmq:
    image: "rabbitmq:management"
    networks:
      - music_broadcast
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_ERLANG_COOKIE: "oolong20020222"
      RABBITMQ_DEFAULT_USER: "paxton"
      RABBITMQ_DEFAULT_PASS: "oolong20020222"
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  redis:
    image: redis:latest 
    ports:
      - "6379:6379" 
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - music_broadcast
    restart: always
  # ngrok:
  #   image: ngrok/ngrok:3
  #   networks:
  #     - music_broadcast
  #   restart: unless-stopped
  #   volumes:
  #     - ./ngrok.yml:/etc/ngrok.yml
  #   command:
  #         - "start"
  #         - "--all"
  #         - "--config"
  #         - "/etc/ngrok.yml"
  #   ports:
  #     - 4040:4040
  #   depends_on:
  #     - nginx
  flower:
    image: mher/flower
    restart: always
    expose:
      - 5555
    ports:
      - 5556:5555
    networks:
      - music_broadcast
    environment:
      - FLOWER_URL_PREFIX=/flower
      - FLOWER_BASIC_AUTH=paxton:oolong20020222
      - CELERY_BROKER_URL=amqp://paxton:oolong20020222@rabbitmq//
    depends_on:
      - rabbitmq
      - redis
  server:
    restart: always
    build:
      context: .
      dockerfile: ./docker/fastapi.Dockerfile
      args:
        env_mode: development
    ports:
      - 8000:8000
    networks:
      - music_broadcast
    volumes:
      - ./app:/app/app
      - ./test:/app/test
    depends_on:
      - db
      - rabbitmq
      - redis
  fronted:
    build:
      context: .
      dockerfile: ./docker/fronted.Dockerfile
      args:
        env_mode: development
    ports:
      - "4174:4173"
    volumes:
      - ./src:/app/src
      - ./index.html:/app/index.html
      - ./public:/app/public
    depends_on:
      - server
    networks:
      - music_broadcast
  db:
    image: mysql:latest
    restart: always
    env_file: .env
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - music_broadcast
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: "linux/amd64"
    env_file: .env
    ports:
      - "8888:80"
    networks:
      - music_broadcast
    depends_on:
      - db
  celery-worker:
    build:
      context: .
      dockerfile: ./docker/worker.Dockerfile
      args:
        env_mode: development
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - music_broadcast
    depends_on:
      - db
      - rabbitmq
      - redis
    volumes:
      - ./:/app
    stop_signal: SIGKILL
    # stop_grace_period: 1m

networks:
  music_broadcast:

volumes:
  redis_data:
  rabbitmq_data:
  mysql_data: