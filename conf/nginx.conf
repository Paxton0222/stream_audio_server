load_module /etc/nginx/modules/ngx_rtmp_module.so;

worker_processes auto;
rtmp_auto_push on;
events {

}
rtmp {
  server {
    listen 1935;
    listen [::]:1935 ipv6only=on;

    application live {
      live on;

      hls on;
      hls_path /mnt/hls/live;
      hls_fragment 2s;
      hls_playlist_length 4s;

      record off;
      record_path /mnt/hls/record;
      record_unique on;
      # record_suffix %F_%T;
    }
  }
}

http {
  server_tokens off;
  include mime.types;
  keepalive_timeout 65;

  upstream flower {
    server flower:5555;
  }

  upstream api_server {
    server server:8000;
  }

  upstream fronted_server {
    server fronted:4173;
  }

  server {
    listen 5555;
    listen [::]:5555 ipv6only=on;
    #listen 443;
    #server_name f.pax.tw;

    ssl_certificate /etc/nginx/ssl/acme_pax_tw/pax.tw_ecc/fullchain.cer;
    ssl_certificate_key /etc/nginx/ssl/acme_pax_tw/pax.tw_ecc/pax.tw.key;

    location / {
      proxy_pass http://flower;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location ~ ^/flower/? {
      # sub_filter_last_modified on;
      # sub_filter_once off;

      rewrite ^/flower/(.*)$ /$1 break;
      proxy_pass http://flower;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }

  server {
    #listen 3000;
    #listen [::]:3000 ipv6only=on;
    listen 80;
    server_name m.pax.tw;

    #ssl_certificate /etc/nginx/ssl/acme_pax_tw/pax.tw_ecc/fullchain.cer;
    #ssl_certificate_key /etc/nginx/ssl/acme_pax_tw/pax.tw_ecc/pax.tw.key;

    location / {
      proxy_pass http://fronted_server;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
    }
    location /api {
      proxy_pass http://api_server;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }

  server {
    #listen 1999;
    #listen [::]:1999;
    listen 80;
    server_name hls.pax.tw;
   
    #ssl_certificate /etc/nginx/ssl/acme_pax_tw/pax.tw_ecc/fullchain.cer;
    #ssl_certificate_key /etc/nginx/ssl/acme_pax_tw/pax.tw_ecc/pax.tw.key; 

    location / {
      add_header Cache-Control no-cache;
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length';

      if ($request_method = "OPTIONS") {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t;
      }

      root /mnt/hls;
    }
  }
}
